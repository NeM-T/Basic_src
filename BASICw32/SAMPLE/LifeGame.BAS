100 REM Conway!'s Game of Life
110 REM 宇宙が境界を持つ場合（有限宇宙）のプログラム例
120 REM 無限に実行を続けるので，実行時に適宜の時点で中断する。
130 REM 参考文献  Wikipedia ライフゲーム
140 REM http://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B2%E3%83%BC%E3%83%A0
150 REM  初期セルパターン開始位置（行，列）
160 DATA 1,1
170 REM  初期セルパターン大きさ  （行，列）  
180 DATA 9,36 
190 REM  初期セルパターン
200 DATA  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
210 DATA  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0
220 DATA  0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1 
230 DATA  0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1 
240 DATA  1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 
250 DATA  1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0 
260 DATA  0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0 
270 DATA  0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 
280 DATA  0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 
290 DECLARE NUMERIC a,b,a1,b1,c,i,j
300 DECLARE NUMERIC m(80,80)    
310 DECLARE NUMERIC mx(80,80)  ! 作業用
320 MAT m=ZER
330 READ a,b     ! 初期セルパターン開始位置（行，列）
340 READ a1,b1   ! 初期セルパターン大きさ  （行，列）  
350 FOR i=a TO a+a1-1
360    FOR j=b TO b+b1-1
370       READ m(j,i)  ! MAT-CELLS文は第1成分が横，第2成分が縦なので転置。
380    NEXT j
390 NEXT i
400 DO  ! 無限ループ。実行時に中断を選んで終了させる。
410    MAT PLOT CELLS, IN 0,1; 1,0: m            ! 表示
420    MAT mx=m  
430    FOR i=1 TO 80
440       FOR j=1 TO 80
450          LET c=0  ! 周囲8個のセル中，生きているものの個数を調べる。
460          IF i>1 AND j>1   THEN LET c=c+m(i-1,j-1)
470          IF i>1           THEN LET c=c+m(i-1,j)
480          IF i>1 AND j<80  THEN LET c=c+m(i-1,j+1)
490          IF j>1           THEN LET c=c+m(i,j-1)
500          IF j<80          THEN LET c=c+m(i,j+1)
510          IF i<80 AND j>1  THEN LET c=c+m(i+1,j-1)
520          IF i<80          THEN LET c=c+m(i+1,j)
530          IF i<80 AND j<80 THEN LET c=c+m(i+1,j+1)
540          SELECT CASE c
550          CASE 3 
560             LET mx(i,j)=1
570          CASE 2
580             ! 維持。LET mx(i,j)=m(i,j)でもよい
590          CASE ELSE
600             LET mx(i,j)=0
610          END SELECT
620       NEXT j
630    NEXT i
640    MAT m=mx            ! 新世代に移行
650    ! WAIT DELAY 0.5      ! 必要であれば，注釈を解除して実行速度を調整する。
660 LOOP
670 END

